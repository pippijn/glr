(* ccTerminals.ids
 * do not edit; this file automatically generated by
 *   tok/make-token-files -o ccTerminals tok/c++1998.tok tok/c++2011.tok tok/gnu.tok
 *)

(* form:
 *   <code> : <name> [<alias>] ;
 *)

    0 : TOK_EOF                        "<EOF>";
    1 : TOK_NAME                       ;
    2 : TOK_TYPE_NAME                  ;
    3 : TOK_VARIABLE_NAME              ;
    4 : TOK_INT_LITERAL                ;
    5 : TOK_FLOAT_LITERAL              ;
    6 : TOK_STRING_LITERAL             ;
    7 : TOK_CHAR_LITERAL               ;
    8 : TOK_ASM                        "asm";
    9 : TOK_AUTO                       "auto";
   10 : TOK_BREAK                      "break";
   11 : TOK_BOOL                       "bool";
   12 : TOK_CASE                       "case";
   13 : TOK_CATCH                      "catch";
   14 : TOK_CDECL                      "cdecl";
   15 : TOK_CHAR                       "char";
   16 : TOK_CLASS                      "class";
   17 : TOK_CONST                      "const";
   18 : TOK_CONST_CAST                 "const_cast";
   19 : TOK_CONTINUE                   "continue";
   20 : TOK_DEFAULT                    "default";
   21 : TOK_DELETE                     "delete";
   22 : TOK_DO                         "do";
   23 : TOK_DOUBLE                     "double";
   24 : TOK_DYNAMIC_CAST               "dynamic_cast";
   25 : TOK_ELSE                       "else";
   26 : TOK_ENUM                       "enum";
   27 : TOK_EXPLICIT                   "explicit";
   28 : TOK_EXPORT                     "export";
   29 : TOK_EXTERN                     "extern";
   30 : TOK_FALSE                      "false";
   31 : TOK_FLOAT                      "float";
   32 : TOK_FOR                        "for";
   33 : TOK_FRIEND                     "friend";
   34 : TOK_GOTO                       "goto";
   35 : TOK_IF                         "if";
   36 : TOK_INLINE                     "inline";
   37 : TOK_INT                        "int";
   38 : TOK_LONG                       "long";
   39 : TOK_MUTABLE                    "mutable";
   40 : TOK_NAMESPACE                  "namespace";
   41 : TOK_NEW                        "new";
   42 : TOK_OPERATOR                   "operator";
   43 : TOK_PASCAL                     "pascal";
   44 : TOK_PRIVATE                    "private";
   45 : TOK_PROTECTED                  "protected";
   46 : TOK_PUBLIC                     "public";
   47 : TOK_REGISTER                   "register";
   48 : TOK_REINTERPRET_CAST           "reinterpret_cast";
   49 : TOK_RETURN                     "return";
   50 : TOK_SHORT                      "short";
   51 : TOK_SIGNED                     "signed";
   52 : TOK_SIZEOF                     "sizeof";
   53 : TOK_STATIC                     "static";
   54 : TOK_STATIC_CAST                "static_cast";
   55 : TOK_STRUCT                     "struct";
   56 : TOK_SWITCH                     "switch";
   57 : TOK_TEMPLATE                   "template";
   58 : TOK_THIS                       "this";
   59 : TOK_THROW                      "throw";
   60 : TOK_TRUE                       "true";
   61 : TOK_TRY                        "try";
   62 : TOK_TYPEDEF                    "typedef";
   63 : TOK_TYPEID                     "typeid";
   64 : TOK_TYPENAME                   "typename";
   65 : TOK_UNION                      "union";
   66 : TOK_UNSIGNED                   "unsigned";
   67 : TOK_USING                      "using";
   68 : TOK_VIRTUAL                    "virtual";
   69 : TOK_VOID                       "void";
   70 : TOK_VOLATILE                   "volatile";
   71 : TOK_WCHAR_T                    "wchar_t";
   72 : TOK_WHILE                      "while";
   73 : TOK_LPAREN                     "(";
   74 : TOK_RPAREN                     ")";
   75 : TOK_LBRACKET                   "[";
   76 : TOK_RBRACKET                   "]";
   77 : TOK_ARROW                      "->";
   78 : TOK_COLONCOLON                 "::";
   79 : TOK_DOT                        ".";
   80 : TOK_BANG                       "!";
   81 : TOK_TILDE                      "~";
   82 : TOK_PLUS                       "+";
   83 : TOK_MINUS                      "-";
   84 : TOK_PLUSPLUS                   "++";
   85 : TOK_MINUSMINUS                 "--";
   86 : TOK_AND                        "&";
   87 : TOK_STAR                       "*";
   88 : TOK_DOTSTAR                    ".*";
   89 : TOK_ARROWSTAR                  "->*";
   90 : TOK_SLASH                      "/";
   91 : TOK_PERCENT                    "%";
   92 : TOK_LEFTSHIFT                  "<<";
   93 : TOK_RIGHTSHIFT                 ">>";
   94 : TOK_LESSTHAN                   "<";
   95 : TOK_LESSEQ                     "<=";
   96 : TOK_GREATERTHAN                ">";
   97 : TOK_GREATEREQ                  ">=";
   98 : TOK_EQUALEQUAL                 "==";
   99 : TOK_NOTEQUAL                   "!=";
  100 : TOK_XOR                        "^";
  101 : TOK_OR                         "|";
  102 : TOK_ANDAND                     "&&";
  103 : TOK_OROR                       "||";
  104 : TOK_QUESTION                   "?";
  105 : TOK_COLON                      ":";
  106 : TOK_EQUAL                      "=";
  107 : TOK_STAREQUAL                  "*=";
  108 : TOK_SLASHEQUAL                 "/=";
  109 : TOK_PERCENTEQUAL               "%=";
  110 : TOK_PLUSEQUAL                  "+=";
  111 : TOK_MINUSEQUAL                 "-=";
  112 : TOK_ANDEQUAL                   "&=";
  113 : TOK_XOREQUAL                   "^=";
  114 : TOK_OREQUAL                    "|=";
  115 : TOK_LEFTSHIFTEQUAL             "<<=";
  116 : TOK_RIGHTSHIFTEQUAL            ">>=";
  117 : TOK_COMMA                      ",";
  118 : TOK_ELLIPSIS                   "...";
  119 : TOK_SEMICOLON                  ";";
  120 : TOK_LBRACE                     "{";
  121 : TOK_RBRACE                     "}";
  122 : TOK_ANNOTATION                 ;
  123 : TOK_PREFER_REDUCE              "<prefer reduce>";
  124 : TOK_PREFER_SHIFT               "<prefer shift>";
  125 : TOK_CONSTEXPR                  "constexpr";
  126 : TOK_NOEXCEPT                   "noexcept";
  127 : TOK_DECLTYPE                   "decltype";
  128 : TOK_ALIGNOF                    "alignof";
  129 : TOK_NULLPTR                    "nullptr";
  130 : TOK_STATIC_ASSERT              "static_assert";
  131 : TOK_CHAR16_t                   "char16_t";
  132 : TOK_CHAR32_t                   "char32_t";
  133 : TOK___BUILTIN_CONSTANT_P       "__builtin_constant_p";
  134 : TOK___BUILTIN_VA_ARG           "__builtin_va_arg";
  135 : TOK___ALIGNOF__                "__alignof__";
  136 : TOK___OFFSETOF__               "__offsetof__";
  137 : TOK___BUILTIN_OFFSETOF         "__builtin_offsetof";
  138 : TOK___ATTRIBUTE__              "__attribute__";
  139 : TOK___FUNCTION__               "__FUNCTION__";
  140 : TOK___LABEL__                  "__label__";
  141 : TOK___PRETTY_FUNCTION__        "__PRETTY_FUNCTION__";
  142 : TOK___TYPEOF__                 "__typeof__";
  143 : TOK___EXTENSION__              "__extension__";
  144 : TOK_MIN_OP                     "<?";
  145 : TOK_MAX_OP                     ">?";
  146 : TOK_REAL                       "__real__";
  147 : TOK_IMAG                       "__imag__";
  148 : TOK_RESTRICT                   "restrict";
  149 : TOK_COMPLEX                    "_Complex";
  150 : TOK_IMAGINARY                  "_Imaginary";
